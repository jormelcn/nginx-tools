#! /bin/bash
com=$1
domain=$2
root=$3
crt=$4
key=$5
mkdir -p /tmp/nginx-tools
rm -f /tmp/nginx-tools/https.conf

if [ "$com" == "add" ]; then
mkdir -p $root
echo "
server{
        server_name $domain;
        root $root;
        index index.html index.htm index.nginx-debian.html
        listen [::]:443 ssl;
        listen 443 ssl;
        ssl_certificate $crt;
        ssl_certificate_key $key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;

        location / {
                try_files \$uri \$uri/ =404;
        }
}
" >> /tmp/nginx-tools/https.conf
sudo cp --remove-destination /tmp/nginx-tools/https.conf /etc/nginx/sites-available/https.$domain.conf

elif [ "$com" == "remove" ]; then
sudo rm /etc/nginx/sites-available/https.$domain.conf

elif [ "$com" == "enable" ]; then
sudo ln -s -f /etc/nginx/sites-available/https.$domain.conf /etc/nginx/sites-enabled/https.$domain.conf

elif [ "$com" == "disable" ]; then
sudo rm /etc/nginx/sites-enabled/https.$domain.conf

elif [ "$com" == "redirect" ]; then
echo "
server {
        server_name $domain;
        return 301 $root\$request_uri;
        listen [::]:443 ssl;
        listen 443 ssl;
        ssl_certificate $crt;
        ssl_certificate_key $key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers HIGH:!aNULL:!MD5;
}
" >> /tmp/nginx-tools/https.conf
sudo cp --remove-destination /tmp/nginx-tools/https.conf /etc/nginx/sites-available/https.$domain.conf

fi
